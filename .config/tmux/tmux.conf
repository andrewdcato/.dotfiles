# : << EOF
# heavily inspired by: https://github.com/gpakosz/.tmux
# -- general -------------------------------------------------------------------
set -g default-terminal "xterm-256color"
set-option -ag terminal-overrides ",xterm*:Tc"
# set-option -g default-terminal 'screen-256color'
# set-option -g terminal-overrides ',xterm-256color:RGB'

setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

bind-key x kill-pane                      # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off              # don't exit from tmux when closing a session

# edit configuration
bind e new-window -n "~/.config/tmux/tmux.conf" sh -c 'nvim ~/.config/tmux/tmux.conf && tmux source ~/.config/tmux/tmux.conf && tmux display " ~/.config/tmux/tmux.conf sourced"'

# reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display ' ~/.config/tmux/tmux.conf sourced'

# replace C-b by C-a instead of using both prefixes
set -gu prefix2
unbind C-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# -- display -------------------------------------------------------------------
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity on

set -g status-position top
set -g status-justify centre

# -- navigation ----------------------------------------------------------------
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -h -c "#{pane_current_path}"

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window

# toggle mouse
bind m set-option -g mouse \; display-message 'Mouse #{?mouse,on,off}'

# -- copy mode -----------------------------------------------------------------
bind Enter copy-mode # enter copy mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Wayland clipboard
if -b 'command -v wl-copy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | wl-copy"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

# -- tpm and plugins -----------------------------------------------------------
# List of plugins
set -g @tpm_plugins '                      \
  tmux-plugins/tpm                         \
  tmux-plugins/tmux-sensible               \
  christoomey/vim-tmux-navigator           \
  JefeDavis/catppuccin-tmux                \
  joshmedeski/t-smart-tmux-session-manager \
  soyuka/tmux-current-pane-hostname        \
  yardnsm/tmux-1password                   \
'

# -- configure tmux theme -------------------------------------------------------
# # MAIN OPTS
set -g @catppuccin_flavor "macchiato"
set -g @catppuccin_date_time "%a, %b %d at %-I:%M%p"
# set -g @catppuccin_window_status_enable "yes"
# set -g @catppuccin_window_status_icon_enable "yes"
set -g @catppuccin_status_connect_separator "yes"
set -g @catppuccin_status_fill "all"

# STATUS MODULES - LEFT SIDE
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_modules_left_separator_left   "█"  # default is @catppuccin_status_left_separator
set -g @catppuccin_status_modules_left_separator_right  "█ "  # default is @catppuccin_status_right_separator
set -g @catppuccin_status_modules_left_separator_left_color   $thm_green  # default is @catppuccin_[module_name]_color
set -g @catppuccin_status_modules_left_separator_right_color  $thm_black4  # default is @catppuccin_[module_name]_color
set -g @catppuccin_status_modules_left_fill "all"

# WINDOWS
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_middle_separator "█"
set -g @catppuccin_window_right_separator ""
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_default_text " #{b:pane_current_path} #W " # use "#W" for application instead of directory
set -g @catppuccin_window_current_text " #W #{?window_zoomed_flag,( ),}"

# STATUS MODULES - RIGHT SIDE
set -g @catppuccin_status_modules_right "application user host date_time"
set -g @catppuccin_status_modules_right_fill "all"
set -g @catppuccin_host_text "#h"

# NOTE: auto-install TPM and plugins on first run
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
   
run '$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm'
